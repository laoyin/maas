#!/usr/bin/python3
# Copyright 2016 Canonical Ltd.  This software is licensed under the
# GNU Affero General Public License version 3 (see the file LICENSE).

from __future__ import (
    absolute_import,
    print_function,
    unicode_literals,
)

str = None

__metaclass__ = type
__all__ = []

import grp
import os
import sys


def check_user():
    # At present, only root should execute this.
    if os.getuid() != 0:
        raise SystemExit("This utility may only be run as root.")


def set_group():
    # Ensure that we're running as the `maas` group.
    try:
        gr_maas = grp.getgrnam("maas")
    except KeyError:
        raise SystemExit("No such group: maas")
    else:
        os.setegid(gr_maas.gr_gid)


def set_umask():
    # Prevent creation of world-readable (or writable, executable) files.
    os.umask(0o007)


def run():
    import sys
    sys.path.append("../../src/")
    # Force the production MAAS Django configuration.
    os.environ.setdefault(
        "DJANGO_SETTINGS_MODULE", "maasserver.djangosettings.settings")

    # Let Django do the rest.
    from django.core import management
    management.execute_from_command_line()


def main():
    if 'maas-region-admin' in sys.argv[0]:
        sys.stderr.write(
            "WARNING: The maas-region-admin command is deprecated and will be "
            "removed in a future version. From now on please use 'maas-region' "
            "instead.\n")
    check_user()
    # set_group()
    set_umask()
    run()


if __name__ == "__main__":
    main()
